{"ast":null,"code":"var _jsxFileName = \"/Users/david/digiReact/react0412/src/HelloWrite.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HeroWrite(props) {\n  _s();\n  const [hero_name, setHeroName] = useState('');\n  const [hero_desc, setHeroDesc] = useState('');\n  const heroNameChange = e => {\n    setHeroName(e.target.value);\n  };\n  const heroDescChange = e => {\n    setHeroDesc(e.target.value);\n  };\n  const onSubmit = async e => {\n    /*\n        Spring은 데이터를 문자로 받아야 한다\n        Axios는 JSON으로 데이터를 주고 받는다.\n    */\n    e.preventDefault();\n    await axios.post('http://localhost:9090/hero/write', {\n      hero_name: hero_name,\n      hero_desc: hero_desc\n    }).then(res => {\n      console.log(res.data.result);\n    }).catch(error => {\n      console.log(error);\n    });\n    /*\n        form 태그를 통해 서버에 정보를 전송전에 호출된다.\n        버튼의 기본 기능을 정지시킨다. submit버튼의 submit 기능을 막고,\n        별도의 처리를 한다.\n    */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC601\\uC6C5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \"\\uC774\\uB984 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: heroNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this), \"\\uC5C5\\uC801 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: heroDescChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        children: \"\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [hero_name, \" \", hero_desc]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(HeroWrite, \"l6UvxhWTDcZ9qw/do8ker5m3piI=\");\n_c = HeroWrite;\nexport default HeroWrite;\nvar _c;\n$RefreshReg$(_c, \"HeroWrite\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","HeroWrite","props","_s","hero_name","setHeroName","hero_desc","setHeroDesc","heroNameChange","e","target","value","heroDescChange","onSubmit","preventDefault","post","then","res","console","log","data","result","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/Users/david/digiReact/react0412/src/HelloWrite.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nfunction HeroWrite(props) {\n  const [hero_name, setHeroName] = useState('');\n  const [hero_desc, setHeroDesc] = useState('');\n  const heroNameChange = (e) => {\n    setHeroName(e.target.value);\n  };\n\n  const heroDescChange = (e) => {\n    setHeroDesc(e.target.value);\n  };\n\n  const onSubmit = async (e) => {\n    /*\n        Spring은 데이터를 문자로 받아야 한다\n        Axios는 JSON으로 데이터를 주고 받는다.\n    */\n    e.preventDefault();\n    await axios\n      .post('http://localhost:9090/hero/write', {\n        hero_name: hero_name,\n        hero_desc: hero_desc,\n      })\n      .then((res) => {\n        console.log(res.data.result);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    /*\n        form 태그를 통해 서버에 정보를 전송전에 호출된다.\n        버튼의 기본 기능을 정지시킨다. submit버튼의 submit 기능을 막고,\n        별도의 처리를 한다.\n    */\n  };\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <h1>영웅</h1>\n        이름 : <input type=\"text\" onChange={heroNameChange}></input>\n        업적 : <input type=\"text\" onChange={heroDescChange}></input>\n        <input type=\"button\">추가</input>\n      </form>\n      <div>\n        {hero_name} {hero_desc}\n      </div>\n    </div>\n  );\n}\n\nexport default HeroWrite;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACS,SAAS,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAMW,cAAc,GAAIC,CAAC,IAAK;IAC5BJ,WAAW,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,cAAc,GAAIH,CAAC,IAAK;IAC5BF,WAAW,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAME,QAAQ,GAAG,MAAOJ,CAAC,IAAK;IAC5B;AACJ;AACA;AACA;IACIA,CAAC,CAACK,cAAc,EAAE;IAClB,MAAMhB,KAAK,CACRiB,IAAI,CAAC,kCAAkC,EAAE;MACxCX,SAAS,EAAEA,SAAS;MACpBE,SAAS,EAAEA;IACb,CAAC,CAAC,CACDU,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAACC,MAAM,CAAC;IAC9B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IACpB,CAAC,CAAC;IACJ;AACJ;AACA;AACA;AACA;EACE,CAAC;;EACD,oBACEvB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAMa,QAAQ,EAAEA,QAAS;MAAAW,QAAA,gBACvBxB,OAAA;QAAAwB,QAAA,EAAI;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,mBACN,eAAA5B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEtB;MAAe;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,mBACrD,eAAA5B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAElB;MAAe;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC1D5B,OAAA;QAAO6B,IAAI,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1B,eACP5B,OAAA;MAAAwB,QAAA,GACGpB,SAAS,EAAC,GAAC,EAACE,SAAS;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACzB,EAAA,CA/CQF,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAiDlB,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}